plugins {
	id("java")
	id("org.springframework.boot") version "3.2.2" // üî• –ü–æ–º–µ–Ω—è–ª–∏ –≤–µ—Ä—Å–∏—é!
	id("io.spring.dependency-management") version "1.1.7"
}

group = "com.miscroservice"
version = "0.0.1-SNAPSHOT"

java {
	toolchain {
		languageVersion.set(JavaLanguageVersion.of(17))
	}
}

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/release" }
}

dependencyManagement {
	imports {
		mavenBom("org.springframework.cloud:spring-cloud-dependencies:2023.0.1") // üöÄ –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è Spring Boot 3.2.x
	}
}

dependencies {
	implementation("org.springframework.boot:spring-boot-starter-web")
	implementation("org.springframework.boot:spring-boot-starter-actuator")

	// üîπ Spring Boot Data + PostgreSQL
	implementation("org.springframework.boot:spring-boot-starter-data-jpa")
	runtimeOnly("org.postgresql:postgresql")

	// üîπ Redis –¥–ª—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
	implementation("org.springframework.boot:spring-boot-starter-data-redis")

	// üîπ OpenFeign –¥–ª—è –æ–±—â–µ–Ω–∏—è —Å auth-service
	implementation("org.springframework.cloud:spring-cloud-starter-openfeign")

	// üîπ Spring Security + JWT
	implementation("org.springframework.boot:spring-boot-starter-security")
	implementation("io.jsonwebtoken:jjwt-api:0.11.5")
	runtimeOnly("io.jsonwebtoken:jjwt-impl:0.11.5")
	runtimeOnly("io.jsonwebtoken:jjwt-jackson:0.11.5")

	// üîπ Kafka –¥–ª—è —Å–æ–±—ã—Ç–∏–π (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—à—å)
	implementation("org.springframework.kafka:spring-kafka")

	// üîπ –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
	implementation("org.springframework.boot:spring-boot-starter-validation")

	// üîπ Lombok (—É–¥–æ–±—Å—Ç–≤–æ —Ä–∞–±–æ—Ç—ã —Å –º–æ–¥–µ–ª—è–º–∏)
	compileOnly("org.projectlombok:lombok")
	annotationProcessor("org.projectlombok:lombok")

	// üîπ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
	testImplementation("org.springframework.boot:spring-boot-starter-test")
	testImplementation("org.testcontainers:postgresql")
	testImplementation("org.testcontainers:junit-jupiter")
}

tasks.named("test") {
	useJUnitPlatform()
}
